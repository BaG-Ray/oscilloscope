<Application x:Class="ComSample.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:ComSample" d1p1:Ignorable="d" StartupUri="MainWindow.xaml">
  <Application.Resources>
    <ResourceDictionary>
      <vm:ViewModelLocator xmlns:vm="clr-namespace:ComSample.ViewModel" x:Key="Locator" d:IsDataSource="True" />
      <Style x:Key="CommonButtonBase" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" SnapsToDevicePixels="true">
                <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Background" Value="#000000" />
                  <Setter Property="Opacity" Value="0.1" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                  <Setter Property="Foreground" Value="#FFFF00" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="false">
                  <Setter Property="Foreground" Value="White" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="Btn0093EABase" BasedOn="{StaticResource CommonButtonBase}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#0093EA" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="5" />
      </Style>
      <Style x:Key="ComboxStyleBtn" TargetType="ToggleButton">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate>
              <Border x:Name="Back" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="0 6 6 0">
                <Path Name="PathFill" Width="13" Height="11" Margin="0,0,15,0" HorizontalAlignment="Right" Data="M5,0 L10,10 L0,10 z" Fill="White" RenderTransformOrigin="0.5,0.5" Stretch="Fill" StrokeThickness="0">
                  <Path.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform Angle="180" />
                      <TranslateTransform />
                    </TransformGroup>
                  </Path.RenderTransform>
                </Path>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="PathFill" Property="Fill" Value="#999999" />
                  <Setter TargetName="Back" Property="Background" Value="Transparent" />
                  <Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <!--  Combox  -->
      <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="20,5" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#293f5f" />
        <Setter Property="IsEditable" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#b5c2cf" />
        <Setter Property="ItemContainerStyle">
          <Setter.Value>
            <!--  ComBoxItem  -->
            <Style TargetType="ComboBoxItem">
              <Setter Property="MinHeight" Value="22" />
              <Setter Property="MinWidth" Value="60" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Back" Background="Transparent" BorderBrush="#81D779" BorderThickness="0,0,0,0">
                      <ContentPresenter Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" ContentSource="{Binding Source}" />
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="Back" Property="Background" Value="LightGray" />
                      </Trigger>
                      <Trigger Property="IsHighlighted" Value="True">
                        <Setter TargetName="Back" Property="Background" Value="LightGray" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Setter.Value>
        </Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="0.7*" />
                  <ColumnDefinition Width="0.3*" MaxWidth="30" />
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" Padding="10,0,0,0" VerticalContentAlignment="Center" Background="Transparent" BorderThickness="0" Foreground="{TemplateBinding Foreground}" IsReadOnly="{TemplateBinding IsReadOnly}" Text="{TemplateBinding Text}" />
                <Border Grid.Column="0" Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="0,0,0,0" CornerRadius="6,0,0,6" />
                <Border Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="White" BorderThickness="1,1,1,1" CornerRadius="6,6,6,6">
                  <ToggleButton ClickMode="Press" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboxStyleBtn}" />
                </Border>
                <Popup x:Name="Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide">
                  <Border x:Name="DropDown" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" CornerRadius="1" SnapsToDevicePixels="True">
                    <Border.Effect>
                      <DropShadowEffect BlurRadius="2" Opacity="0.5" ShadowDepth="0" Color="Black" />
                    </Border.Effect>
                    <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="4,6,4,6" CanContentScroll="True" HorizontalScrollBarVisibility="Auto" SnapsToDevicePixels="True" Style="{DynamicResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                      <StackPanel Background="White" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                    </ScrollViewer>
                  </Border>
                </Popup>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </Application.Resources>
</Application>