<Window
    x:Class="ComSample.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cv="clr-namespace:ComSample.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ComSample"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wpf="clr-namespace:InteractiveDataDisplay.WPF;assembly=InteractiveDataDisplay.WPF"
    xmlns:wpf1="clr-namespace:Microsoft.Maps.MapControl.WPF;assembly=Microsoft.Maps.MapControl.WPF"
    Title="串口调试工具"
    Width="1280"
    Height="720"
    AllowsTransparency="True"
    Background="Transparent"
    ResizeMode="NoResize"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>

        <cv:FontConverters x:Key="FontConverters" />
        <cv:ColorConverters x:Key="ColorConverters" />
        <!--  串口设置标题属性  -->
        <Style x:Key="TxtComStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="TextTrimming" Value="None" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="22" />
        </Style>
        <!--  串口设置中状态指示灯状态  -->
        <Style x:Key="TxtComStyle1" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="pack://application:,,,/Font/#iconfont" />
            <Setter Property="TextTrimming" Value="None" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="30" />
        </Style>

        <!--  示波器选择按钮  -->
        <Style x:Key="chkBullet" TargetType="CheckBox">
            <Setter Property="IsChecked" Value="False" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#999" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <Grid>
                                <Border
                                    x:Name="border"
                                    Width="18"
                                    Height="18"
                                    Margin="1,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="White"
                                    CornerRadius="9">
                                    <Border.RenderTransform>
                                        <TranslateTransform X="0" />
                                    </Border.RenderTransform>
                                </Border>
                                <TextBlock
                                    x:Name="txt"
                                    Margin="9,0"
                                    VerticalAlignment="Center"
                                    Foreground="White"
                                    Text="{TemplateBinding Content}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="18" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="txt" Property="Text" Value="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter TargetName="txt" Property="FontWeight" Value="UltraBold" />
                                <Setter TargetName="txt" Property="Foreground" Value="Black" />
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                To="120"
                                                Duration="00:00:0.2" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="txt"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                To="0"
                                                Duration="00:00:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                To="0"
                                                Duration="00:00:0.2" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="txt"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                To="18"
                                                Duration="00:00:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="txt" Property="Text" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter TargetName="txt" Property="FontWeight" Value="Normal" />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="txt" Property="Foreground" Value="Yellow" />
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="Black" />
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--  下拉框属性  -->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />

        <!--  下拉框选中属性  -->
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="14,0,0,0"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />

        <!--  下拉框属性  -->
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Border
                                x:Name="checkBoxBorder"
                                Margin="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid x:Name="markGrid">
                                    <Path
                                        x:Name="optionMark"
                                        Margin="1"
                                        Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                        Fill="{StaticResource OptionMark.Static.Glyph}"
                                        Opacity="0"
                                        Stretch="None" />
                                    <Rectangle
                                        x:Name="indeterminateMark"
                                        Margin="2"
                                        Fill="{StaticResource OptionMark.Static.Glyph}"
                                        Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
        <Style x:Key="TextBoxSevDataStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#F7F7F7" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="#1C86EE" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Opacity" Value="0.9" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Height" Value="455" />
            <Setter Property="Margin" Value="0,0,3,0" />
            <Setter Property="FontSize" Value="25" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="7"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextBoxReqStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#F7F7F7" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="#1C86EE" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="FontSize" Value="25" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Width" Value="527" />
            <Setter Property="Height" Value="70" />
            <Setter Property="Margin" Value="0,10,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="7"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--  TextBlock样式  -->
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="TextTrimming" Value="None" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="FontSize" Value="25" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,3,0" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="pack://application:,,,/Font/#iconfont" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="false">
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Border Margin="5" CornerRadius="10">
            <Border.Background>
                <ImageBrush ImageSource="images/back.jpg" />
            </Border.Background>
            <Grid Margin="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Background="#FFFFFF" Opacity="0" />

                <!--  参数区  -->
                <StackPanel Grid.Column="0" Margin="10">
                    <!--  标题  -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Margin="20,5,0,5"
                            VerticalAlignment="Center"
                            FontFamily="pack://application:,,,/Font/#iconfont"
                            FontSize="30"
                            Foreground="White"
                            Text="&#xe6e4;" />
                        <TextBlock
                            Margin="10,5,0,5"
                            FontSize="25"
                            FontWeight="ExtraBold"
                            Foreground="White"
                            Text="串口调试工具" />
                    </StackPanel>


                    <!--  串口参数设置  -->
                    <GroupBox
                        FontSize="23"
                        FontWeight="Bold"
                        Foreground="White"
                        Header="串口参数设置">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="0.2*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="0"
                                Style="{DynamicResource TxtComStyle}"
                                Text="端     口：" />
                            <ComboBox
                                Grid.Row="0"
                                Grid.Column="1"
                                ItemsSource="{Binding ComParameterConfig.Port}"
                                SelectedItem="{Binding CurrentParameter.Port}"
                                Style="{StaticResource ComboBoxStyle}" />
                            <TextBlock
                                Grid.Row="1"
                                Grid.Column="0"
                                Style="{DynamicResource TxtComStyle}"
                                Text="波 特 率：" />
                            <ComboBox
                                Grid.Row="1"
                                Grid.Column="1"
                                ItemsSource="{Binding ComParameterConfig.BaudRate}"
                                SelectedItem="{Binding CurrentParameter.BaudRdate}"
                                Style="{StaticResource ComboBoxStyle}" />
                            <TextBlock
                                Grid.Row="2"
                                Grid.Column="0"
                                Style="{DynamicResource TxtComStyle}"
                                Text="数 据 位：" />
                            <ComboBox
                                Grid.Row="2"
                                Grid.Column="1"
                                ItemsSource="{Binding ComParameterConfig.DataBit}"
                                SelectedItem="{Binding CurrentParameter.DataBit}"
                                Style="{StaticResource ComboBoxStyle}" />
                            <TextBlock
                                Grid.Row="3"
                                Grid.Column="0"
                                Style="{DynamicResource TxtComStyle}"
                                Text="校 验 位：" />
                            <ComboBox
                                Grid.Row="3"
                                Grid.Column="1"
                                ItemsSource="{Binding ComParameterConfig.CheckMode}"
                                SelectedItem="{Binding CurrentParameter.CheckMode}"
                                Style="{StaticResource ComboBoxStyle}" />
                            <TextBlock
                                Grid.Row="4"
                                Grid.Column="0"
                                Style="{DynamicResource TxtComStyle}"
                                Text="停 止 位：" />
                            <ComboBox
                                Grid.Row="4"
                                Grid.Column="1"
                                ItemsSource="{Binding ComParameterConfig.StopBit}"
                                SelectedItem="{Binding CurrentParameter.StopBit}"
                                Style="{StaticResource ComboBoxStyle}" />
                            <TextBlock
                                Grid.Row="5"
                                Grid.Column="0"
                                Style="{DynamicResource TxtComStyle}"
                                Text="状     态：" />
                            <TextBlock
                                Grid.Row="5"
                                Grid.Column="1"
                                Foreground="{Binding CurrentParameter.IsOpen, Converter={StaticResource ColorConverters}}"
                                Style="{DynamicResource TxtComStyle1}"
                                Text="&#xe692;" />

                            <!--  串口开关  -->
                            <UniformGrid Grid.Row="6" Grid.ColumnSpan="3">

                                <Button
                                    Background="#20B2AA"
                                    Command="{Binding ToOpen}"
                                    Content="{Binding CurrentParameter.IsOpen, Converter={StaticResource FontConverters}}"
                                    Style="{StaticResource Btn0093EABase}" />

                            </UniformGrid>
                        </Grid>
                    </GroupBox>



                    <!--  数据控制区域  -->
                    <UniformGrid Margin="5" Columns="4">
                        <TextBlock
                            HorizontalAlignment="Center"
                            Style="{DynamicResource TxtComStyle}"
                            Text="发送" />
                        <TextBlock
                            Name="BlkSend"
                            Foreground="#EE3B3B"
                            Style="{DynamicResource TxtComStyle1}"
                            Text="&#xe692;" />
                        <TextBlock
                            Name="BlkRecive"
                            Foreground="#EE3B3B"
                            Style="{DynamicResource TxtComStyle1}"
                            Text="&#xe692;" />
                        <TextBlock
                            HorizontalAlignment="Left"
                            Style="{DynamicResource TxtComStyle}"
                            Text="接收" />
                    </UniformGrid>

                    <!--  接收区数据设置  -->
                    <StackPanel HorizontalAlignment="Left">
                        <TextBlock
                            Margin="0,3,3,3"
                            FontSize="22"
                            Foreground="White"
                            Text="————接收区属性—————" />
                    </StackPanel>

                    <UniformGrid Columns="2" Rows="1">
                        <CheckBox
                            Content="十六进制"
                            IsChecked="{Binding CurrentParameter.ReceiveFormat16}"
                            Style="{DynamicResource CheckBoxStyle}" />
                        <Button
                            Background="#EE7942"
                            Command="{Binding ToClear}"
                            Content="清空接收"
                            Style="{StaticResource Btn0093EABase}" />
                    </UniformGrid>

                    <!--  发送区属性设置  -->
                    <StackPanel>
                        <TextBlock
                            Margin="0,3,3,3"
                            FontSize="22"
                            Foreground="White"
                            Text="————发送区属性—————" />
                        <UniformGrid Columns="2">
                            <CheckBox
                                Content=" 十六进制"
                                IsChecked="{Binding CurrentParameter.SendFormat16}"
                                Style="{DynamicResource CheckBoxStyle}" />
                            <Button
                                Background="#4682B4"
                                Content="设置校验"
                                Style="{StaticResource Btn0093EABase}" />
                        </UniformGrid>
                        <UniformGrid Margin="10,3,0,0" Columns="5">
                            <TextBlock
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="22"
                                Foreground="White">
                                发送：
                            </TextBlock>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="22"
                                Foreground="White"
                                Text="{Binding CurrentParameter.SendCount}" />
                            <TextBlock
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="22"
                                Foreground="White">
                                接收：
                            </TextBlock>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="22"
                                Foreground="White"
                                Text="{Binding CurrentParameter.ReceiveCount}" />
                            <TextBlock
                                Margin="0,0,3,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                FontSize="22"
                                FontWeight="Bold"
                                Foreground="White"
                                MouseLeftButtonDown="TextBlock_MouseLeftButtonDown_1"
                                Text="清空" />
                        </UniformGrid>

                    </StackPanel>

                </StackPanel>
                <!--  操作区  -->
                <Border
                    Grid.Column="1"
                    Background="#FFFFFF"
                    Opacity="0" />
                <StackPanel Grid.Column="1" Margin="10,0,10,0">
                    <Grid Grid.Row="0">
                        <TextBlock
                            Margin="0,5,0,5"
                            HorizontalAlignment="Left"
                            FontSize="25"
                            Foreground="White"
                            Text="数据接收区:" />
                    </Grid>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>


                        <TextBox
                            Name="ReceivingTextBox"
                            Grid.Row="1"
                            AcceptsReturn="True"
                            IsReadOnly="True"
                            Style="{DynamicResource TextBoxSevDataStyle}"
                            Text ="{Binding CurrentParameter.DataReceiveInfo}"
                            TextWrapping="Wrap" 
                            VerticalScrollBarVisibility="Visible"/>
                            
                        <StackPanel Grid.Row="2" Orientation="Horizontal">

                            <TextBox
                                Name="SendingTextBox"
                                Style="{DynamicResource TextBoxReqStyle}"
                                TextWrapping="Wrap"
                                Text="{Binding CurrentParameter.SendData}"
                                 />
                        </StackPanel>

                        <StackPanel Grid.Row="3" VerticalAlignment="Center">
                            <Border CornerRadius="5" />
                            <Button
                                Name="SendingButton"
                                Grid.Row="3"
                                Width="120"
                                Height="70"
                                Margin="5,10,0,0"
                                HorizontalAlignment="Right"
                                Background="#20B2AA"
                                Command="{Binding ToClick}"
                                Style="{StaticResource Btn0093EABase}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontFamily="pack://application:,,,/Font/#iconfont"
                                        FontSize="20"
                                        Text="&#xe6e4;" />
                                    <TextBlock Text="发送数据" />
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </StackPanel>

                <StackPanel Grid.Column="3">
                    <TextBlock
                        MouseLeftButtonDown="TextBlock_MouseLeftButtonDown"
                        Style="{DynamicResource TextBlockStyle}"
                        Text="&#xe663;" />
                </StackPanel>



                <!--  示波器组件  -->
                <Grid
                    Name="charts"
                    Grid.Column="2"
                    Grid.ColumnSpan="2">

                    <CheckBox
                        x:Name="ButtonGridOn"
                        Margin="140,8,350,668"
                        Background="DeepPink"
                        Checked="GridOn_OnChecked"
                        Content="ON"
                        IsChecked="False"
                        Style="{StaticResource chkBullet}"
                        Tag="ON" />

                    <GroupBox
                        Margin="5"
                        FontSize="23"
                        FontWeight="Bold"
                        Foreground="White"
                        Header="示波器模拟">


                        <!--  示波器图像界面  -->
                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="7*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>


                            <wpf:Chart
                                Name="chart"
                                Grid.Row="0"
                                Margin="10"
                                IsAutoFitEnabled="True"
                                IsHorizontalNavigationEnabled="True"
                                IsVerticalNavigationEnabled="True">
                                <Grid Name="lines" />
                            </wpf:Chart>



                            <!--  示波器按钮组件  -->


                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <CheckBox
                                    x:Name="ButtonCHFi"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="5"
                                    Background="Crimson"
                                    Content="CH1"
                                    IsChecked="False"
                                    Style="{StaticResource chkBullet}"
                                    Tag="CH1" />

                                <ComboBox
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Style="{StaticResource ComboBoxStyle}" />

                                <CheckBox
                                    x:Name="ButtonCHSe"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="5"
                                    Background="Gold"
                                    Content="CH2"
                                    IsChecked="False"
                                    Style="{StaticResource chkBullet}"
                                    Tag="CH2" />

                                <ComboBox
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Style="{StaticResource ComboBoxStyle}" />

                                <CheckBox
                                    x:Name="ButtonCHTh"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Margin="5"
                                    Background="Aqua"
                                    Content="CH3"
                                    IsChecked="False"
                                    Style="{StaticResource chkBullet}"
                                    Tag="CH3" />

                                <ComboBox
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Style="{StaticResource ComboBoxStyle}" />

                                <CheckBox
                                    x:Name="ButtonCHFo"
                                    Grid.Row="0"
                                    Grid.Column="3"
                                    Margin="5"
                                    Background="Aquamarine"
                                    Content="CH4"
                                    IsChecked="False"
                                    Style="{StaticResource chkBullet}"
                                    Tag="CH4" />

                                <ComboBox
                                    Grid.Row="1"
                                    Grid.Column="3"
                                    Style="{StaticResource ComboBoxStyle}" />

                            </Grid>
                        </Grid>
                    </GroupBox>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
